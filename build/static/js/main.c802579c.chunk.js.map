{"version":3,"sources":["components/Home.js","features/songSlice.js","components/AddNewSong.js","components/SongRow.js","components/SongList.js","components/OtherSongs.js","components/SongDetail.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Home","songSlice","createSlice","name","initialState","songList","reducers","addSong","state","action","payload","actions","AddNewSong","dispatch","useDispatch","useState","songName","setSongName","singerName","setSingerName","lyric","setLyric","history","useHistory","className","type","value","onChange","e","target","onClick","event","preventDefault","newId","replace","c","crypto","getRandomValues","Uint8Array","toString","newSong","id","author","title","publishedDate","Date","toISOString","push","alert","disabled","SongRow","song","props","songs","map","to","OtherSongs","length","s","SongDetail","songId","useParams","songDetail","find","otherSongs","filter","App","songListFromStore","useSelector","console","log","path","pageId","appId","htmlRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","songsReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c802579c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Home(){\r\n  return (\r\n    <div>\r\n      <h1>Hello. This is Home Page !</h1>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const songSlice = createSlice({\r\n  name: 'songs',\r\n  initialState: {\r\n    songList: [],\r\n  },\r\n  reducers: {\r\n    addSong: (state, action) => {\r\n      state.songList = [...state.songList, action.payload]\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addSong } = songSlice.actions;\r\n\r\n\r\nexport default songSlice.reducer;\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addSong } from '../features/songSlice'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function AddNewSong() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [songName, setSongName] = useState(\"\");\r\n    const [singerName, setSingerName] = useState(\"\");\r\n    const [lyric, setLyric] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handdleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (songName && singerName && lyric) {\r\n            const newId = uuidv4()\r\n            \r\n            const newSong = {\r\n                id: newId,\r\n                author: singerName,\r\n                title: songName,\r\n                lyric: lyric,\r\n                publishedDate: new Date().toISOString()\r\n            }\r\n            dispatch(addSong(newSong))\r\n            history.push(`/song/${newId}`)\r\n        } else {\r\n            alert('Please input all the fields!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-new-song\">\r\n            <form >\r\n                <h1>Hello! You are adding the song Name: `<b>{songName}</b>` of singer: `<b>{singerName}</b>` </h1>\r\n                <p>Enter the song name:</p>\r\n                <input\r\n                    type='text'\r\n                    name='songName'\r\n                    value={songName}\r\n                    onChange={e => setSongName(e.target.value)}\r\n                />\r\n                <p>Enter the singer name:</p>\r\n                <input\r\n                    type='text'\r\n                    name='singerName'\r\n                    value={singerName}\r\n                    onChange={e => setSingerName(e.target.value)}\r\n                />\r\n                <p>Enter the short lyric:</p>\r\n                <input\r\n                    type='text'\r\n                    name='lyric'\r\n                    value={lyric}\r\n                    onChange={e => setLyric(e.target.value)}\r\n                />\r\n                <div><button onClick={handdleSubmit} disabled={!songName || !singerName || !lyric}>Add New</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nfunction uuidv4() {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        // eslint-disable-next-line \r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function SongRow({ song }) {\r\n  return <div className=\"song-row\">{song.title} - {song.author} </div>\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SongRow from \"./SongRow\";\r\n\r\nexport default function songList(props){\r\n  return (\r\n    <div>\r\n      <h1>Hello. This is ListSongs Page !</h1>\r\n      {props.songs.map(song => \r\n        <Link key={song.id} to={`song/${song.id}`}><SongRow song={song}></SongRow></Link>\r\n        )}\r\n    </div>\r\n  )\r\n}","\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport SongRow from \"./SongRow\";\r\n\r\nfunction OtherSongs({ songs, author }) {\r\n    if (songs && songs.length > 0) {\r\n\r\n        return songs.map(s => \r\n        <div key={s.id}>\r\n            <Link to={`/song/${s.id}`}>\r\n                <SongRow song={s}></SongRow>\r\n            </Link>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n    else return <div>{author} has only one song in this system.</div>\r\n}\r\n\r\nexport default OtherSongs","import React from 'react'\r\nimport {\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport OtherSongs from \"./OtherSongs\";\r\n\r\nconst SongDetail = ({ songs }) => {\r\n  let { songId } = useParams();\r\n\r\n  let songDetail = songs.find(s => s.id === songId);\r\n  let otherSongs = songs.filter(s => s.author === songDetail.author && s.id !== songDetail.id)\r\n\r\n  return <div>\r\n    <h3>Title: {songDetail.title}</h3>\r\n    <h3>Author:{songDetail.author} </h3>\r\n    <h3>Published at: {songDetail.publishedDate}</h3>\r\n    <p>Short lyric:</p>\r\n    <p className=\"lyrics\">{songDetail.lyric} </p>\r\n    <div>Other available songs of <b>{songDetail.author}</b>:</div>\r\n    <OtherSongs songs={otherSongs} author={songDetail.author} />\r\n  </div>;\r\n}\r\n\r\nexport default SongDetail","import MessengerCustomerChat from 'react-messenger-customer-chat';\nimport React, { useState } from 'react'\nimport './App.css'\nimport Home from './components/Home'\nimport AddNewSong from './components/AddNewSong'\nimport SongList from './components/SongList'\nimport SongDetail from './components/SongDetail'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux'\n\n// const sortedSong = [...externalsongs].sort((a, b) => new Date(a.publishedDate) - new Date(b.publishedDate))\n\n\nfunction App() {\n\n  const songListFromStore = useSelector(state => state.songs.songList);\n  console.log(songListFromStore);\n\n\n  // const [ song ] = useState(songListFromStore);\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"Navbar\">\n          <NavLink to=\"/Home\">Home</NavLink>\n\n          <NavLink to=\"/AddNewSong\">Add New Song</NavLink>\n\n          <NavLink to=\"/songs\">List of Songs</NavLink>\n        </div>\n        <div >\n          <Switch>\n            <Route path=\"/Home\">\n              <Home />\n            </Route>\n            <Route path=\"/songs\">\n              <SongList songs={songListFromStore} />\n            </Route>\n            <Route path=\"/song/:songId\">\n              <SongDetail songs={songListFromStore} />\n            </Route>\n            <Route path=\"/AddNewSong\">\n              <AddNewSong songs={songListFromStore} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <div>\n        <MessengerCustomerChat\n          pageId=\"105409911443105\"\n          appId=\"338273787600006\"\n          htmlRef=\"<REF_STRING>\"\n        />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport songsReducer from '../features/songSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    songs: songsReducer,\r\n  },\r\n}); ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './app/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}